rules:
  - id: tailwind-raw-color-class
    pattern-regex: "\\b(text|bg|border)-(red|blue|green|gray|slate|zinc|stone|amber|rose)-[0-9]{2,3}\\b"
    message: "Prefer DaisyUI role classes (e.g., bg-primary, text-base-content) over raw Tailwind color scales."
    languages: [javascript, typescript, html]
    severity: WARNING

  - id: daisyui-dynamic-token
    pattern-regex: "`[^`]*\\b(btn|badge|alert|tab)-\\${[^}]+}[^`]*`"
    message: "Avoid dynamic DaisyUI token names (e.g. `btn-${color}`) — Tailwind cannot statically include them."
    languages: [javascript, typescript]
    severity: WARNING

  - id: classlist-too-long
    pattern-regex: "class(Name)?=\\{?['\"][^'\"]{120,}['\"]\\}?"
    message: "Class list is long — extract into a semantic class with @apply."
    languages: [javascript, typescript, html]
    severity: WARNING

  - id: class-token-uppercase
    pattern-regex: "class(Name)?=\\{?['\"][^'\"]*[A-Z][^'\"]*['\"]\\}?"
    message: "Class tokens should use lowercase Tailwind/DaisyUI utilities or project semantic prefixes (btn, card, nav__, form-, ws-)."
    languages: [javascript, typescript, html]
    severity: WARNING

  - id: testing-library-no-testids
    message: "Avoid test IDs; prefer accessible queries like getByRole, getByLabelText, or getByText."
    languages: [javascript, typescript]
    severity: ERROR
    pattern-either:
      - pattern: $SCREEN.getByTestId($ARG)
      - pattern: $SCREEN.queryByTestId($ARG)
      - pattern: $SCREEN.findByTestId($ARG)
      - pattern: const { ..., getByTestId, ... } = $RENDER($ARGS)
      - pattern: const { ..., queryByTestId, ... } = $RENDER($ARGS)
      - pattern: const { ..., findByTestId, ... } = $RENDER($ARGS)
    metadata:
      applies_to: tests

  - id: testing-no-data-testid-attr
    message: "Avoid data-testid attributes; rely on accessible roles, names, or labels instead."
    languages: [javascript, typescript, html]
    severity: ERROR
    pattern-regex: "data-testid"
